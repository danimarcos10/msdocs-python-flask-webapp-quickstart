name: Deploy Flask App to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: webapp-flask-demo-ds-2024
  REGISTRY_LOGIN_SERVER: acrflaskdemods2024.azurecr.io
  IMAGE_BASE_NAME: flask-demo
  RESOURCE_GROUP: BCSAI2024-DEVOPS-STUDENTS-A-DEV
  KEY_VAULT_NAME: kv-flask-demo-ds-2024
  KEY_VAULT_SECRET_NAME_ACR_USERNAME: acr-username
  KEY_VAULT_SECRET_NAME_ACR_PASSWORD: acr-password1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-version: ${{ steps.image-version.outputs.version }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@main
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Get docker registry credentials from Azure Key Vault
      id: get-credentials
      run: |
        echo "Retrieving ACR credentials from Key Vault..."
        
        # Get username from Key Vault
        REGISTRY_USERNAME=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_USERNAME }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)
        if [ -z "$REGISTRY_USERNAME" ]; then
          echo "Error: Failed to retrieve ACR username from Key Vault"
          exit 1
        fi
        
        # Get password from Key Vault
        REGISTRY_PASSWORD=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_PASSWORD }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)
        if [ -z "$REGISTRY_PASSWORD" ]; then
          echo "Error: Failed to retrieve ACR password from Key Vault"
          exit 1
        fi
        
        # Set environment variables for subsequent steps
        echo "REGISTRY_USERNAME=$REGISTRY_USERNAME" >> $GITHUB_ENV
        echo "REGISTRY_PASSWORD=$REGISTRY_PASSWORD" >> $GITHUB_ENV
        
        # Mask the password in logs
        echo "::add-mask::$REGISTRY_PASSWORD"
        
        echo "Successfully retrieved ACR credentials from Key Vault"
    
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
        username: ${{ env.REGISTRY_USERNAME }}
        password: ${{ env.REGISTRY_PASSWORD }}
    
    - name: Set image version
      id: image-version
      run: echo "version=$(echo ${GITHUB_REF#refs/heads/})-$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_OUTPUT
    
    - name: Build and push image
      run: |
        docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
        docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ github.ref_name }}-latest
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ github.ref_name }}-latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        images: ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ needs.build-and-push.outputs.image-version }} 